// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')
const chrome = require("selenium-webdriver/chrome");


describe('test-test', function() {
    this.timeout(30000)
    let driver
    let vars
    let options
    beforeEach(async function() {
        driver = await new Builder().forBrowser('chrome').build()
        vars = {}
        options = new chrome.Options();
    })
    afterEach(async function() {
        await driver.quit();
    })
    async function waitForWindow(timeout = 2) {
    //    driver.setProperty("webdriver.chrome.driver", "/home/vasilii/WebstormProjects/ci--cd/chromedriver");
       /* options.addArguments("start-maximized"); // open Browser in maximized mode
        options.addArguments("disable-infobars"); // disabling infobars
        options.addArguments("--disable-extensions"); // disabling extensions
        options.addArguments("--disable-gpu"); // applicable to windows os only
        options.addArguments("--disable-dev-shm-usage"); // overcome limited resource problems
        options.addArguments("--no-sandbox");*/
        options.addArguments( "--disable-gpu", "--headless", "--no-sandbox");


        await driver.sleep(timeout)
        const handlesThen = vars["windowHandles"]
        const handlesNow = await driver.getAllWindowHandles()
        if (handlesNow.length > handlesThen.length) {
            return handlesNow.find(handle => (!handlesThen.includes(handle)))
        }
        throw new Error("New window did not appear before timeout")
    }
    it('test-test', async function() {
        await driver.get("http://localhost:3000/")
        await driver.manage().window().setRect({ width: 1920, height: 1053 })
        await driver.findElement(By.css(".App-header")).click()
        vars["windowHandles"] = await driver.getAllWindowHandles()
        await driver.findElement(By.linkText("Learn React")).click()
        vars["win6040"] = await waitForWindow(2000)
        await driver.switchTo().window(vars["win6040"])
    })
})